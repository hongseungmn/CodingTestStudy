package algorithm.array;

/* 차분 배열 */

/*
 * 특징
 *  - 차분 배열은 구간 업데이트 문제를 효율적으로 처리하기 위한 자료 구조
 *  - 특정 구간에 대해 값을 빠르게 증가/감소시킬 수 있도록 도와준다.
 *  - 이 기법을 사용하면 구간 업데이트 문제를 O(1) 시간 복잡도로 해결할 수 있어 매우 효율적이다.
 * 
 * 원리
 *  - 차분 배열은 배열의 각 요소가 이전 값과의 차이를 저장하는 배열이다.
 *  - 주로 구간 합을 빠르게 계산하거나 구간에 값을 더하는 작업을 효율적으로 처리하는데 사용된다.
 * 
 * 1. 차분 배열 생성
 *    차분 배열 D는 주어진 배열 A의 차이를 저장한다. 즉, D[i] = A[i] - A[i-1] 
 *    D[0] = A[0]
 *    D[i] = A[i] - A[i-1] (i > 0)
 * 
 * 2. 구간 업데이트
 *    차분 배열을 이용한 구간 업데이트는 두 인덱스 간의 범위에 대해 값을 더하거나 빼는 작업을 빠르게 처리할 수 있다
 *    예를 들어 배열 A에서 구간 [L, R] 에 값을 x만큼 더하려면, 차분 배열 D에서 다음과 같이 처리한다
 *    D[L] += x (구간의 시작점에 x를 더함)
 *    D[R+1] -= x (구간의 끝점 바로 뒤에 x를 빼서 구간이 끝난 지점을 처리)
 * 
 * 3. 차분 배열을 원래 배열로 복원
 *    차분배열 D에서 원래 배열 A를 복원하려면, 차분 배열의 값을 누적하여 원래 배열을 얻는다
 *    A[0] = D[0]
 *    A[i] = A[i-1] + D[i] (i > 0)
 * 
 * 예시
 *  상황 : 7일동안의 온도 기록을 가지고 있다. 각 날짜의 초기 온도는 0으로 설정
 *  일 :    1 2 3 4 5 6 7
 *  온도 :  0 0 0 0 0 0 0
 * 
 * 이제 다음과 같은 온도 조절 작업을 수행한다
 */
public class DifferArray {
  
}
